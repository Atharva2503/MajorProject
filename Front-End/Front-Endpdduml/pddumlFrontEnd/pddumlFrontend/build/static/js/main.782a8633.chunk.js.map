{"version":3,"sources":["Camera.js","Form.js","App.js","Nav.js","Feedback_Form.js","reportWebVitals.js","index.js"],"names":["Camera","videoRef","useRef","photoRef","_useState","useState","_useState2","_slicedToArray","hasPhoto","setHasPhoto","_useState3","_useState4","facingMode","setFacingMode","_useState5","_useState6","recapturing","setRecapturing","_useState7","_useState8","_useState9","_useState10","result","_useState11","_useState12","setImgCNN","_useState13","_useState14","useEffect","navigator","mediaDevices","getUserMedia","video","width","height","then","stream","current","srcObject","play","catch","err","console","error","React","createElement","className","ref","id","onClick","photo","getContext","clearRect","document","getElementById","ctx","drawImage","pixels","getImageData","data","temp_arr","line","log","length","j","i","push","red","green","blue","canvasId","filename","canvas","dataURL","toDataURL","link","href","download","body","appendChild","click","removeChild","saveCanvasImage","Form","plant","setPlant","imgfile","setImgfile","setResult","cnnimg","src","type","name","onChange","file","target","files","URL","createObjectURL","reader","FileReader","addEventListener","event","arrayBuffer","imageData","decode","Uint8Array","useTArray","temp","cnntemp","y","x","index","readAsArrayBuffer","onFileChange","required","value","axios","post","CNNImg","alert","plantname","disease","confidence","comments","App","textToggle","textToggleState","Nav","class","Feedback_Form","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.782a8633.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nfunction Camera() {\n  const videoRef = useRef(null);\n  const photoRef = useRef(null);\n  const [hasPhoto, setHasPhoto] = useState(false);\n  const [facingMode, setFacingMode] = useState(\"user\");\n  const [recapturing, setRecapturing] = useState(false);\n  const[plantname,setPlantname]= useState(\" \");\n  const [result,setResult] = useState(\"\")\n  const [cnnimg, setImgCNN]=useState(\"\");\n  const [imgfile,setImgfile]= useState([]);\n\n\n  const getVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: { width: 256, height: 256, facingMode: facingMode }\n      })\n      .then((stream) => {\n        let video = videoRef.current;\n        video.srcObject = stream;\n        video.play();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    getVideo();\n  }, [videoRef, facingMode]);\n\n  const takePhoto = () => {\n        const canvas = document.getElementById('myCanvas');\n    const width = 256;\n    const height = 256;\n\n    let video = videoRef.current;\n    let photo = photoRef.current;\n\n    photo.width = width;\n    photo.height = height;\n\n    let ctx = photo.getContext(\"2d\");\n    ctx.drawImage(video, 0, 0, width, height);\n    let imageData = ctx.getImageData(0, 0, photo.width, photo.height);\nlet pixels = imageData.data;\nlet temp_arr = []\nlet line = []\n// Loop through the pixel data and log the values\nconsole.log(pixels.length)\nlet j =0 ;\nfor (let i = 0; i < pixels.length; i += 4) {\n  if (j%256 === 0 && j >0 ){\n    temp_arr.push(line)\n    line=[];\n  }\n  \n  let red = pixels[i];\n  let green = pixels[i + 1];\n  let blue = pixels[i + 2];\n  j+=1;\n  line.push([red,green,blue])\n\n  // let alpha = pixels[i + 3];\n  // console.log('Pixel ' + i / 4 + ':', red, green, blue, alpha);\n}\ntemp_arr.push(line)\nsetImgCNN(temp_arr)\n\n    setHasPhoto(true);\n    setRecapturing(true); // set new state variable to true\n    \n\n  };\n\n  const closePhoto = () => {\n    let photo = photoRef.current;\n    let ctx = photo.getContext(\"2d\");\n\n    ctx.clearRect(0, 0, photo.width, photo.height);\n\n    setHasPhoto(false);\n    setRecapturing(false); // set new state variable to false\n   \n\n  };\n\n  const switchCamera = () => {\n    if (facingMode === \"user\") {\n      setFacingMode(\"environment\");\n    } else {\n      setFacingMode(\"user\");\n    }\n  };\n\n  function saveCanvasImage(canvasId, filename) {\n    const canvas = document.getElementById(canvasId);\n    console.log(canvasId);\n    const dataURL = canvas.toDataURL(\"image/jpeg\");\n    const link = document.createElement(\"a\");\n    link.href = dataURL;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  function handleSaveButtonClick() {\n    saveCanvasImage(\"myCanvas\", \"myImage.jpeg\");\n    console.log(photoRef);\n  }\n   \n\n  const  onFileUpload = () => {\n    const canvas = document.getElementById('myCanvas');\nconst imgDataUrl = canvas.toDataURL();\n\naxios.post(\"http://127.0.0.1:8000/gettomoato/\", {\n  // imagefile: imgDataUrl,\n  CNNImg: cnnimg\n})\n.then(data => {\n  alert(\"Plant - \"+data.data.plantname+\"\\nDisease\"+data.data.disease+\"\\nConfidence\"+data.data.confidence+\"\\n\"+data.data.comments)\n  // setResult(\"Plant - \"+data.data.plantname+\"\\nDisease\"+data.data.disease+\"\\nConfidence\"+data.data.confidence+\"\\n\"+data.data.comments)\n})\n.catch(error => {\n  // console.error(error);\n});\n  };\n  \n\n  \n\n\n  return (\n    // <div className=\"CameraApp\">\n    //   <div className=\"box\">\n    //       <h3>{result}</h3>\n    //   </div>\n    //   <div className=\"Camera\">\n    //     <video ref={videoRef}></video>\n    //     <p>\n    //       <button className=\"btn\" onClick={takePhoto}>\n    //         Capture\n    //       </button></p>\n    //       <p><button className=\"btn\" onClick={switchCamera}>\n    //         Switch Camera\n    //       </button></p>\n    //       </div>\n    //   <div className={'result' + (hasPhoto ? 'hasPhoto' : '')}>\n    //     <form >\n    //       <canvas id=\"myCanvas\" ref={photoRef}></canvas>\n    //       {/* <p><button className='btn' onClick={closePhoto}>Re-Capture</button></p> */}\n    //       <p><button className='btn' onClick={handleSaveButtonClick}>Download</button></p>\n          \n         \n    //       {/* <p><button className='btn'  value=\"Submit\" onClick={()=>{onFileUpload()}}>Submit</button></p> */}\n    //       {/* <canvas id=\"myCanvas\" width=\"400\" height=\"400\"></canvas> */}\n    //     </form>\n        \n  \n  \n  \n\n    //   </div>\n    // </div>\n\n    <div className=\"CameraApp\">\n      <div className=\"box\">\n        <h3>{result}</h3>\n      </div>\n      \n      <div className=\"Camera\">\n      \n        <video   ref={videoRef}></video>\n        <div className={'result' + (hasPhoto ? 'hasPhoto' : '')}></div>\n        <canvas  id=\"myCanvas\" ref={photoRef}></canvas>\n        \n        <p>\n          {recapturing ? ( // render \"Recapture\" button if recapturing\n          <button className=\"btn\" onClick={closePhoto}>\n            Recapture\n          </button>\n        ) : ( // render \"Capture\" button otherwise\n        <button className=\"btn\" onClick={takePhoto}>\n          Capture\n        </button>\n      )}\n        </p>\n        <p>\n          <button className=\"btn\" onClick={switchCamera}>\n            Switch Camera\n          </button>\n        </p>\n        <p><button className='btn' onClick={handleSaveButtonClick}>Download</button></p>\n      </div>\n     </div> \n  );\n}\nexport default Camera;","import React, { Component }  from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport './Nav.css'\nimport { decode } from 'jpeg-js';\n// import { Alert } from 'react-alert'\nfunction Form(){\n\n  const[plant,setPlant]= useState(\" \");\n  const [imgfile,setImgfile]= useState([]);\n  const [selectedFile,setselectedFile]=useState(null);\n  const [result,setResult] = useState(\"\")\n  const[plantname,setPlantname]= useState(\" \");\n  const [cnnimg,setImgCNN]=useState(\"\")\n const  onFileChange = name => {\n  setResult(\"\")\n\n  console.log(imgfile.length)\n  const file = name.target.files[0];\nsetPlant(URL.createObjectURL(name.target.files[0]))\n  // Create a new FileReader object to read the file as an array buffer\n  const reader = new FileReader();\n  \n  // Set up an event listener for when the file has finished loading\n  reader.addEventListener('load', (event) => {\n    // Get the array buffer from the loaded file data\n    const arrayBuffer = event.target.result;\n  \n    // Decode the JPEG image data and get the pixel values\n    const imageData = decode(new Uint8Array(arrayBuffer), { useTArray: true });\n    // setImgCNN(imageData);\n  var temp=[];\n  var cnntemp = [];\n    // Loop over the pixels in the image data and read their values\n    for (let y = 0; y < imageData.height; y++) {\n      var line = [];\n      for (let x = 0; x < imageData.width; x++) {\n        const index = (y * imageData.width + x) * 4;\n        const red = imageData.data[index];\n        const green = imageData.data[index + 1];\n        const blue = imageData.data[index + 2];\n        const alpha = imageData.data[index + 3];\n      \n        temp.push(blue);\n        line.push([red,green,blue])\n     \n  \n        // Do something with the pixel data here\n        // console.log(`Pixel at (${x}, ${y}): (${red}, ${green}, ${blue}, ${alpha})`);\n      }\n      cnntemp.push(line);\n    }\n    setImgfile(temp)\n    setImgCNN(cnntemp)\n  });\n  \n  // Start reading the file as an array buffer\n  reader.readAsArrayBuffer(file);\n}\n  \n  \n const  onFileUpload = () => {\n// console.log(imgfile,imgfile.length)\n// axios.post(\"http://127.0.0.1:8000/gettomoato/\",{imagefile:imgfile,plantname:plantname,CNNImg:cnnimg})\n// .then(data=>{\n//   // if (data.data.status===\"success\"){\n//     console.log(data.data)\n//     alert(\"Plant - \"+data.data.plantname+\"\\nDisease - \"+data.data.disease+\"\\nConfidence - \"+data.data.confidence+\"\\n\"+data.data.comments)\n//     // alert(\"The \"+plantname+\" Plant is \" + data.data.result)\n//     // setResult(\"The \"+plantname+\" Plant is \" + data.data.result)\n//     // setImgfile([])\n//   // }\n// })\naxios.post(\"http://127.0.0.1:8000/gettomoato/\",{CNNImg:cnnimg})\n.then(data=>{\n    console.log(data.data)\n    alert(\"Plant - \"+data.data.plantname+\"\\nDisease - \"+data.data.disease+\"\\nConfidence - \"+data.data.confidence+\"\\n\"+data.data.comments)\n \n})\n    // Create an object of formData\n    // const formData = new FormData();\n   \n    // // Update the formData object\n    // formData.append(\n    //   \"myFile\",\n    // selectedFile,\n    //   selectedFile.name\n    // );\n  \n    // console.log(selectedFile)\n    // Details of the uploaded file\n//     let output = \"\";\n// for (const [key, value] of formData) {\n//   // output += `${key}: ${value}\\n`;\n//   console.log(value)\n// }\n//    console.log(output)\n    // Request made to the backend api\n    // Send formData object\n    // axios.post(\"api/uploadfile\", formData);\n  };\n    return(<div className=\"App\">\n       <div className=\"Form\">\n<div className=\"box\">\n     <h3>{result}</h3>\n     <img height={250} width={250} src={plant}/>\n\n     </div>\n<div className= \"box\">\n    <form>\n      <p>\n        <strong>Upload Image of leaf:              </strong>\n      <input type=\"file\" name=\"imagefile\" id=\"imgfile\" onChange={(name)=>onFileChange(name)} required /></p>\n      {/* <p><strong>Select Plant:                      </strong>\n      \n      <select name=\"plantname\" id=\"plantname\" onChange={(name)=>setPlantname(name.target.value)} required>\n      <option value=\"\">Select Plant Name</option>\n        <option value=\"tomato\">Tomato</option>\n        <option value=\"bellpepper\">Papper Bell </option>\n        <option value=\"potato\">Potato</option>\n      </select></p> */}\n      <p><button className='btn' value=\"Submit\" \n      onClick={()=>{onFileUpload()}}>Submit</button></p>\n\n      <p><button className='btn'  value=\"Reset\" >Reset</button></p>\n      </form>\n      </div>\n    </div>\n  </div>\n    );\n}\nexport default Form;","import React, { Component }  from 'react';\nimport { useState } from 'react';\n\nimport './App.css';\n\nimport Camera from './Camera';\nimport Form from './Form';\n\n\nfunction App() {\n  const [textToggle, textToggleState] = useState(true)\n  return (\n    <div className=\"App\">\n       <div className=\"Tog\">\n       <button className='btnHead' onClick={ () => textToggleState(!textToggle) }>Upload or Capture</button>\n       </div>\n       {\n textToggle ?\n <Form />\n\n :\n<div className=\"Cam\"><Camera /> </div>\n}\n    \n    \n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component }  from 'react';\nimport './Nav.css'\nfunction Nav(){\n    return(\n        \n           <div class=\"A\" >\n                <div class=\"container\">\n                    <h1 class=\"display-4\">Plant Disease Detection Using ML</h1>\n                     \n                         <p class=\"lead\">Upload Image or Capture a image to know the Disease</p>\n                         \n                    \n                </div>\n            </div>\n       \n    );\n}\nexport default Nav;","import React, { Component }  from 'react';\nimport './Nav.css'\nimport axios from 'axios';\nimport { useState } from 'react';\nfunction Feedback_Form(){\n\n  const[plant,setPlant]= useState(\" \");\n  const [imgfile,setImgfile]= useState(0);\n\n    return(<div className=\"App\">\n       <div class=\"Form\">\n        \n    <strong>Feedback Form for Incorrectly Classified Images</strong>\n     <form>\n      <p><strong>Upload Incorrectly Classified Image of leaf:              </strong>\n     <input type=\"file\" name=\"imagefile\" id=\"imgfile\" onChange={(name)=>setImgfile(name.target.value)} required /></p>\n      \n\n      <p><strong>Select Identified Disease:                      </strong>\n      \n      <select name=\"plant\" id=\"plant\" onChange={(name)=>setPlant(name.target.value)} required>\n        <option value=\"\">Tomato Bacterial Spots</option>\n        <option value=\"\">Papper Bell Bacterial Spots</option>\n        <option value=\"\">Potato Bacterial Spots</option>\n        <option value=\"\">Tomato Early Blight</option>\n        <option value=\"\">Potato Early Blight</option>\n        <option value=\"\">Tomato Late Blight</option>\n        <option value=\"\">Potato Late Blight</option>\n        <option value=\"\">Tomato Healthy</option>\n        <option value=\"\">Papper Bell Healthy </option>\n        <option value=\"\">Potato Healthy</option>\n      </select></p>\n      <p><input type=\"submit\" value=\"Submit\" \n      onClick={()=>{axios.post(\"http://127.0.0.1:8000/test/\",{data:0}).then(data=>console.log(data.data))}}/></p>\n\n      <p><input type=\"reset\" value=\"Reset\" /></p>\n     </form>\n    \n    </div>\n  </div>\n    );\n}\nexport default Feedback_Form;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport Nav from './Nav';\nimport Feedback_Form from './Feedback_Form';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n\n  \nroot.render(\n  <React.StrictMode>\n    <Nav />\n    <App />\n    <Feedback_Form />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}